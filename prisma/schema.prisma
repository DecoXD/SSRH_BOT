generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String @id @default(uuid())
  admin_key String
  name      String
  email     String @unique(map: "User_email_key")
  password  String
}

model Candidate {
  candidate_id            String              @id @default(uuid())
  first_name              String
  last_name               String
  password                String
  position                String              @db.VarChar(255)
  educational_institution String              @db.VarChar(255)
  gender                  String              @db.VarChar(45)
  address                 Candidate_address   @relation(fields: [address_id], references: [candidate_address_id])
  address_id              Int
  contact                 Candidate_contact   @relation(fields: [contact_id], references: [candidate_contact_id])
  contact_id              Int
  birthday                DateTime
  email                   String              @db.VarChar(255)
  Selection_process       Selection_process[]
}

model Candidate_contact {
  candidate_contact_id Int         @id @default(autoincrement())
  phone_1              String      @db.VarChar(45)
  phone_2              String      @db.VarChar(45)
  phone_3              String      @db.VarChar(45)
  Candidate            Candidate[]
}

model Candidate_address {
  candidate_address_id Int         @id @default(autoincrement())
  zip_code             String      @db.VarChar(45)
  city                 String      @db.VarChar(45)
  state                String      @db.VarChar(45)
  country              String      @db.VarChar(45)
  number               String      @db.VarChar(45)
  street               String      @db.VarChar(45)
  neighborhood         String      @db.VarChar(45)
  Candidate            Candidate[]
}

model Enterprise_accounts {
  enterprise_id     String              @id @default(uuid())
  name              String              @db.VarChar(255)
  email             String              @db.VarChar(255)
  password          String              @db.VarChar(45)
  cnpj              String              @db.VarChar(45)
  owner             String              @db.VarChar(45)
  corporate_name    String              @db.VarChar(255)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  contact           Enterprise_contact  @relation(fields: [contact_id], references: [enterprise_contact_id])
  contact_id        Int
  address           Enterprise_address  @relation(fields: [address_id], references: [enterprise_address_id])
  address_id        Int
  Opportunities     Opportunities[]
  Selection_process Selection_process[]
}

model Enterprise_address {
  enterprise_address_id Int                   @id @default(autoincrement())
  cep                   String
  city                  String                @db.VarChar(45)
  street                String                @db.VarChar(45)
  state                 String                @db.VarChar(45)
  country               String                @db.VarChar(45)
  number                Int?
  complement            String                @db.VarChar(45)
  neighborhood          String                @db.VarChar(45)
  Enterprise_accounts   Enterprise_accounts[]
}

model Enterprise_contact {
  enterprise_contact_id Int                   @id @default(autoincrement())
  phone_1               String                @db.VarChar(45)
  phone_2               String                @db.VarChar(45)
  phone_3               String                @db.VarChar(45)
  Enterprise_accounts   Enterprise_accounts[]
}

model Opportunities {
  id                Int                 @id @default(autoincrement())
  title             String              @db.VarChar(255)
  description       String              @db.VarChar(255)
  salary            Int
  requirements      String              @db.VarChar(255)
  status            String              @default("aberta")
  createdAt         DateTime            @default(now())
  expires           DateTime
  enterprise        Enterprise_accounts @relation(fields: [enterprise_id], references: [enterprise_id])
  enterprise_id     String
  opportunity_type  String              @db.VarChar(45)
  Selection_process Selection_process[]
}

model Selection_process {
  id_selection_process String
  candidate            Candidate           @relation(fields: [candidate_id], references: [candidate_id])
  candidate_id         String
  enterprise           Enterprise_accounts @relation(fields: [enterprise_id], references: [enterprise_id])
  enterprise_id        String
  opportunitie         Opportunities       @relation(fields: [opportunitie_id], references: [id])
  opportunitie_id      Int
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt

  @@id([candidate_id, enterprise_id, opportunitie_id])
}
